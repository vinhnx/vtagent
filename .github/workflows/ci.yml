name: CI

on:
    push:
        branches: [main, master]
    pull_request:
        branches: [main, master]

jobs:
    # Check formatting with rustfmt
    fmt:
        name: Rustfmt
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt

            - name: Check formatting
              run: cargo fmt --all -- --check

    # Lint with clippy
    clippy:
        name: Clippy
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: clippy

            - name: Run clippy
              run: cargo clippy -- -D warnings

    # Test on multiple operating systems
    test:
        name: Test
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                    - os: macos-latest
                      target: x86_64-apple-darwin
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.target }}

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-

            - name: Build
              run: cargo build --workspace

            - name: Run tests
              run: cargo test --workspace

    # Run benchmarks (optional, only on Ubuntu)
    bench:
        name: Benchmarks
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-

            - name: Run benchmarks
              run: cargo bench --workspace

    # Security audit
    audit:
        name: Security Audit
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable

            - name: Install cargo-audit
              run: cargo install cargo-audit

            - name: Run security audit
              run: cargo audit

    # Check documentation
    docs:
        name: Documentation
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable

            - name: Check documentation
              run: cargo doc --workspace --no-deps

            - name: Test documentation examples
              run: cargo test --doc --workspace
