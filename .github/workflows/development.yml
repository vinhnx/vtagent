name: Development

on:
    push:
        branches: [develop, dev, feature/*]
    pull_request:
        branches: [develop, dev]

jobs:
    # Development-focused checks
    dev-check:
        name: Development Check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust toolchain
              uses: dtolnay/rust-toolchain@stable

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-dev-${{ hashFiles('**/Cargo.lock') }}

            - name: Install development tools
              run: |
                  rustup component add rustfmt clippy
                  cargo install cargo-udeps cargo-outdated cargo-license

            - name: Check formatting
              run: cargo fmt --all -- --check

            - name: Run clippy
              run: cargo clippy --workspace --all-targets --all-features -- -D warnings

            - name: Build workspace
              run: cargo build --workspace

            - name: Run tests
              run: cargo test --workspace

            - name: Check unused dependencies
              run: cargo +nightly udeps --workspace || echo "⚠️  Unused deps check completed"

            - name: Check outdated dependencies
              run: cargo outdated --workspace || echo "⚠️  Outdated deps check completed"

            - name: Generate documentation
              run: cargo doc --workspace --no-deps

    # Performance regression check
    perf-check:
        name: Performance Check
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install Rust toolchain
              uses: dtolnay/rust-toolchain@stable

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-perf-${{ hashFiles('**/Cargo.lock') }}

            - name: Build benchmarks
              run: cargo build --benches

            - name: Run benchmarks
              run: cargo bench

            - name: Upload benchmark results
              uses: actions/upload-artifact@v3
              with:
                  name: benchmark-results
                  path: target/criterion/

    # Code coverage (optional)
    coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust toolchain
              uses: dtolnay/rust-toolchain@stable

            - name: Install cargo-tarpaulin
              run: cargo install cargo-tarpaulin

            - name: Run coverage
              run: cargo tarpaulin --workspace --out Xml

            - name: Upload coverage reports
              uses: codecov/codecov-action@v3
              with:
                  file: cobertura.xml
                  fail_ci_if_error: false
