# VTAgent Configuration File (Example)
# This is a minimal configuration example for getting started with vtagent.
# Copy this file to vtagent.toml and customize as needed.

[agent]
# Basic agent settings
max_conversation_turns = 1000
max_session_duration_minutes = 60
verbose_logging = false

# AI Provider configuration
provider = "gemini"
default_model = "gemini-2.5-flash"
api_key_env = "GEMINI_API_KEY"
default_system_instruction = "You are a helpful coding assistant."

[tools]
# Default policy for tools: "allow", "prompt", or "deny"
default_policy = "prompt"

# Override default policy for specific tools
[tools.policies]
read_file = "allow"
write_file = "prompt"
delete_file = "deny"
run_terminal_cmd = "prompt"

[commands]
# Safe commands that execute without confirmation
allow_list = [
    "ls", "pwd", "cat", "grep", "git status", "cargo check"
]

# Dangerous commands that are always blocked
deny_list = [
    "rm -rf", "sudo rm", "shutdown", "format"
]

# Commands requiring extra confirmation
dangerous_patterns = [
    "rm -f", "git reset --hard", "pip install"
]

[security]
human_in_the_loop = true
confirm_destructive_actions = true
log_all_commands = true
max_file_size_mb = 50
# Common programming language extensions
allowed_file_extensions = [
    ".rs", ".toml", ".json", ".md", ".txt", ".yaml", ".yml",
    ".js", ".ts", ".py", ".go", ".java", ".cpp", ".c", ".h"
]

[pty]
enabled = true
default_rows = 24
default_cols = 80
max_sessions = 10
command_timeout_seconds = 300

[multi_agent]
# Multi-agent system is disabled by default
enabled = false
# To enable multi-agent features, set enabled = true and uncomment additional settings below
# execution_mode = "auto"
# orchestrator_model = "gemini-2.5-flash"
# subagent_model = "gemini-2.5-flash-lite"